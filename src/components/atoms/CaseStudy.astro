---
interface Props {
  item: {
    title: string
    description: string
    image: string
    tags: string[]
    id: string
  }
}

const {
  item: { id, title, description, image, tags },
} = Astro.props
---

<script>
  class CaseStudy extends HTMLElement {
    connectedCallback() {}
  }

  customElements.define('case-study', CaseStudy)
</script>
<case-study
  data-title={title}
  class:list={[
    'flex flex-col justify-between cases-animation rounded-lg bg-black bg-opacity-30 h-[450px] md:h-[500px] w-96 lg:w-[500px] backdrop-blur-sm',
  ]}
>
  <div
    class:list={[
      'relative rounded-lg flex min-h-60 max-h-60 md:min-h-72 md:max-h-72 overflow-hidden w-full',
    ]}
  >
    <a href=`/cases/${id}`>
      <img
        src={image}
        alt={title}
        class="absolute top-0 left-0 zoom-on-hover scale-110 w-full"
      />
    </a>
  </div>
  <div class="px-6 pb-6">
    <p class="text-md my-4">{description}</p>
    <div class="flex justify-between items-end">
      <h1 class="text-[1rem] font-bold subtitle">{title}</h1>
      <a href=`/cases/${id}` class="secondary-button" id="modal-trigger-btn"
        >Read More</a
      >
    </div>

    <div class="flex justify-start items-center w-full mt-4 gap-4">
      {
        tags.map(tag => (
          <span class="border border-gray-700 rounded-full p-2 min-w-32 w-fit text-center text-xs text-gray-400">
            {tag}
          </span>
        ))
      }
    </div>
  </div>
</case-study>
