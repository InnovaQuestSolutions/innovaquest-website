---
// ProgressCircle.astro
interface Props {
  percentage: number
  index: number
  size?: number
}

const { percentage, index, size = 1 } = Astro.props
const baseRadius = 40
const radius = baseRadius * size
const viewBoxSize = 128 * size
const centerPoint = viewBoxSize / 2
const circumference = 2 * Math.PI * radius
const offset = circumference - (percentage / 100) * circumference
const strokeWidth = 8 * size
---

<script>
  import { percentagesScrollAnimation } from '../../gsapAnimations'

  class ProgressCircle extends HTMLElement {
    connectedCallback() {
      const offset = this.dataset.offset
      const index = this.dataset.index

      percentagesScrollAnimation(
        'pitch',
        `pitch-circle-animation-${index}`,
        offset,
        index,
      )
    }
  }

  customElements.define('progress-circle', ProgressCircle)
</script>

<progress-circle
  data-offset={offset}
  data-index={index}
  class="relative inline-flex items-center justify-center"
>
  <div class="relative inline-flex items-center justify-center">
    <svg
      class="transform -rotate-90"
      width={`${128 * size}px`}
      height={`${128 * size}px`}
      viewBox={`0 0 ${viewBoxSize} ${viewBoxSize}`}
    >
      <circle
        id="progress-circle-id"
        cx={centerPoint}
        cy={centerPoint}
        r={radius}
        stroke="rgba(255, 255, 255, 0.1)"
        stroke-width={strokeWidth}
        fill="none"></circle>
      <circle
        id="progress-circle"
        class={`pitch-circle-animation-${index}`}
        cx={centerPoint}
        cy={centerPoint}
        r={radius}
        stroke="rgb(176, 186, 255)"
        stroke-width={strokeWidth}
        fill="none"
        stroke-dasharray={circumference}
        stroke-dashoffset={circumference}></circle>
    </svg>
    <span class=`absolute font-bold text-white text-[${size}rem]`
      >+{percentage}%</span
    >
  </div>
</progress-circle>
