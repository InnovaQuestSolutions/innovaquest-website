---
// ProgressCircle.astro
interface Props {
  percentage: number
  index: number
  isModalChild?: boolean
}

const { percentage, index, isModalChild } = Astro.props
const circumference = 2 * Math.PI * 40 // radius is 40
const offset = circumference - (percentage / 100) * circumference
---

<script>
  import {
    percentagesOnShowAnimation,
    percentagesScrollAnimation,
    percentagesOnHideAnimation,
  } from '../../gsapAnimations'
  import { modalIsOpenWithId } from '../../stores/modalStore'

  class ProgressCircle extends HTMLElement {
    connectedCallback() {
      const offset = this.dataset.offset
      const index = this.dataset.index
      const isModalChild = this.dataset.isModalChild

      if (!isModalChild) {
        percentagesScrollAnimation(
          'pitch',
          `pitch-circle-animation-${index}`,
          offset,
          index,
        )
      }

      if (isModalChild) {
        modalIsOpenWithId.subscribe(isOpenWithId => {
          if (isOpenWithId) {
            percentagesOnShowAnimation(
              `modal-circle-animation-${index}`,
              offset,
              index,
            )
          } else if (!isOpenWithId) {
            percentagesOnHideAnimation(`modal-circle-animation-${index}`)
          }
        })
      }
    }
  }

  customElements.define('progress-circle', ProgressCircle)
</script>

<progress-circle
  data-offset={offset}
  data-index={index}
  data-is-Modal-Child={isModalChild}
  class="relative inline-flex items-center justify-center"
>
  <div class="relative inline-flex items-center justify-center">
    <svg class="transform -rotate-90 w-32 h-32">
      <circle
        id="progress-circle-id"
        cx="64"
        cy="64"
        r="40"
        stroke="rgba(255, 255, 255, 0.1)"
        stroke-width="8"
        fill="none"></circle>
      <circle
        id="progress-circle"
        class={!isModalChild
          ? `pitch-circle-animation-${index}`
          : `modal-circle-animation-${index}`}
        cx="64"
        cy="64"
        r="40"
        stroke="rgb(176, 186, 255)"
        stroke-width="8"
        fill="none"
        stroke-dasharray={circumference}
        stroke-dashoffset={circumference}></circle>
    </svg>
    <span class="absolute text-white text-2xl font-medium">+{percentage}%</span>
  </div>
</progress-circle>
