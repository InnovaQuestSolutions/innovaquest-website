---
import ImageWithDynamicallyImportedSrc from '../atoms/ImageWithDynamicallyImportedSrc.astro'
interface Props {
  modelTypeTitle: String
  modelTagline: string
  threeModelBenefits: string[]
  ctaButtonText: string
}

const { modelTypeTitle, modelTagline, threeModelBenefits, ctaButtonText } =
  Astro.props
const grayHex = '#383838'
---

<div
  class="rounded-[20px] bg-black border-[0.5px] border-gray-700 w-full md:w-1/2 md:max-w-[550px] flex flex-col justify-start items-start h-fit md:h-[700px] gap-6 p-10 md:p-20 pricing-animation"
>
  <span class="text-md text-gray-400 tracking-wider"> PLAN</span>
  <h3 class="text-2xl text-white font-bold">{modelTypeTitle.toUpperCase()}</h3>
  <p class="min-h-36 text-gray-400">
    {modelTagline}
  </p>
  <button
    class:list={[
      'tracking-wider rounded-full px-6 bg-gray-700 min-w-fit min-h-12 max-h-12 text-white text-sm transition ease-out duration-300 hover:bg-[#B2C6FE] hover:black',
    ]}
  >
    <a href="https://form.typeform.com/to/QPtsUFJn"
      >{ctaButtonText.toUpperCase()}
    </a></button
  >

  <div class="border-b-[0.5px] border-gray-700 w-full"></div>
  <div class="flex flex-col items-start justify-center gap-2">
    {
      threeModelBenefits.map((benefit: string) => (
        <div class="flex justify-between items-start gap-3">
          <ImageWithDynamicallyImportedSrc
            imageName={'tickNoBorder.png'}
            alt={'challenge'}
            width={25}
            height={25}
          />
          <p class="text-md w-full font-bold">{benefit}</p>
        </div>
      ))
    }
  </div>
</div>
